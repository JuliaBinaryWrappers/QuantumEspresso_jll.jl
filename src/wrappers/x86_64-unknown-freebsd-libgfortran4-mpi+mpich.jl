# Autogenerated wrapper script for QuantumEspresso_jll for x86_64-unknown-freebsd-libgfortran4-mpi+mpich
export band_interpolation, bands, carparinello, cppp, d3hess, density_of_states, dynamical_matrix_gamma, dynamical_matrix_generic, hubbardparams, ibrav_to_cell, kcw, kpoints, ld1, molecularpdos, nudged_elastic_band, oscdft_et, oscdft_pp, phonon, plotband, plotrho, postahc, pp, ppacf, pprism, projwfc, pw2bgw, pw2wannier90, pwcond, pwscf, reciprocal_to_real, turbo_davidson, turbo_eels, turbo_lanczos, turbo_magnon, turbo_spectrum, xspectra

using CompilerSupportLibraries_jll
using FFTW_jll
using Libxc_jll
using OpenBLAS32_jll
using SCALAPACK32_jll
using MPICH_jll
JLLWrappers.@generate_wrapper_header("QuantumEspresso")
JLLWrappers.@declare_executable_product(band_interpolation)
JLLWrappers.@declare_executable_product(bands)
JLLWrappers.@declare_executable_product(carparinello)
JLLWrappers.@declare_executable_product(cppp)
JLLWrappers.@declare_executable_product(d3hess)
JLLWrappers.@declare_executable_product(density_of_states)
JLLWrappers.@declare_executable_product(dynamical_matrix_gamma)
JLLWrappers.@declare_executable_product(dynamical_matrix_generic)
JLLWrappers.@declare_executable_product(hubbardparams)
JLLWrappers.@declare_executable_product(ibrav_to_cell)
JLLWrappers.@declare_executable_product(kcw)
JLLWrappers.@declare_executable_product(kpoints)
JLLWrappers.@declare_executable_product(ld1)
JLLWrappers.@declare_executable_product(molecularpdos)
JLLWrappers.@declare_executable_product(nudged_elastic_band)
JLLWrappers.@declare_executable_product(oscdft_et)
JLLWrappers.@declare_executable_product(oscdft_pp)
JLLWrappers.@declare_executable_product(phonon)
JLLWrappers.@declare_executable_product(plotband)
JLLWrappers.@declare_executable_product(plotrho)
JLLWrappers.@declare_executable_product(postahc)
JLLWrappers.@declare_executable_product(pp)
JLLWrappers.@declare_executable_product(ppacf)
JLLWrappers.@declare_executable_product(pprism)
JLLWrappers.@declare_executable_product(projwfc)
JLLWrappers.@declare_executable_product(pw2bgw)
JLLWrappers.@declare_executable_product(pw2wannier90)
JLLWrappers.@declare_executable_product(pwcond)
JLLWrappers.@declare_executable_product(pwscf)
JLLWrappers.@declare_executable_product(reciprocal_to_real)
JLLWrappers.@declare_executable_product(turbo_davidson)
JLLWrappers.@declare_executable_product(turbo_eels)
JLLWrappers.@declare_executable_product(turbo_lanczos)
JLLWrappers.@declare_executable_product(turbo_magnon)
JLLWrappers.@declare_executable_product(turbo_spectrum)
JLLWrappers.@declare_executable_product(xspectra)
function __init__()
    JLLWrappers.@generate_init_header(CompilerSupportLibraries_jll, FFTW_jll, Libxc_jll, OpenBLAS32_jll, SCALAPACK32_jll, MPICH_jll, MPIPreferences)
    JLLWrappers.@init_executable_product(
        band_interpolation,
        "bin/band_interpolation.x",
    )

    JLLWrappers.@init_executable_product(
        bands,
        "bin/bands.x",
    )

    JLLWrappers.@init_executable_product(
        carparinello,
        "bin/cp.x",
    )

    JLLWrappers.@init_executable_product(
        cppp,
        "bin/cppp.x",
    )

    JLLWrappers.@init_executable_product(
        d3hess,
        "bin/d3hess.x",
    )

    JLLWrappers.@init_executable_product(
        density_of_states,
        "bin/dos.x",
    )

    JLLWrappers.@init_executable_product(
        dynamical_matrix_gamma,
        "bin/dynmat.x",
    )

    JLLWrappers.@init_executable_product(
        dynamical_matrix_generic,
        "bin/matdyn.x",
    )

    JLLWrappers.@init_executable_product(
        hubbardparams,
        "bin/hp.x",
    )

    JLLWrappers.@init_executable_product(
        ibrav_to_cell,
        "bin/ibrav2cell.x",
    )

    JLLWrappers.@init_executable_product(
        kcw,
        "bin/kcw.x",
    )

    JLLWrappers.@init_executable_product(
        kpoints,
        "bin/kpoints.x",
    )

    JLLWrappers.@init_executable_product(
        ld1,
        "bin/ld1.x",
    )

    JLLWrappers.@init_executable_product(
        molecularpdos,
        "bin/molecularpdos.x",
    )

    JLLWrappers.@init_executable_product(
        nudged_elastic_band,
        "bin/neb.x",
    )

    JLLWrappers.@init_executable_product(
        oscdft_et,
        "bin/oscdft_et.x",
    )

    JLLWrappers.@init_executable_product(
        oscdft_pp,
        "bin/oscdft_pp.x",
    )

    JLLWrappers.@init_executable_product(
        phonon,
        "bin/ph.x",
    )

    JLLWrappers.@init_executable_product(
        plotband,
        "bin/plotband.x",
    )

    JLLWrappers.@init_executable_product(
        plotrho,
        "bin/plotrho.x",
    )

    JLLWrappers.@init_executable_product(
        postahc,
        "bin/postahc.x",
    )

    JLLWrappers.@init_executable_product(
        pp,
        "bin/pp.x",
    )

    JLLWrappers.@init_executable_product(
        ppacf,
        "bin/ppacf.x",
    )

    JLLWrappers.@init_executable_product(
        pprism,
        "bin/pprism.x",
    )

    JLLWrappers.@init_executable_product(
        projwfc,
        "bin/projwfc.x",
    )

    JLLWrappers.@init_executable_product(
        pw2bgw,
        "bin/pw2bgw.x",
    )

    JLLWrappers.@init_executable_product(
        pw2wannier90,
        "bin/pw2wannier90.x",
    )

    JLLWrappers.@init_executable_product(
        pwcond,
        "bin/pwcond.x",
    )

    JLLWrappers.@init_executable_product(
        pwscf,
        "bin/pw.x",
    )

    JLLWrappers.@init_executable_product(
        reciprocal_to_real,
        "bin/q2r.x",
    )

    JLLWrappers.@init_executable_product(
        turbo_davidson,
        "bin/turbo_davidson.x",
    )

    JLLWrappers.@init_executable_product(
        turbo_eels,
        "bin/turbo_eels.x",
    )

    JLLWrappers.@init_executable_product(
        turbo_lanczos,
        "bin/turbo_lanczos.x",
    )

    JLLWrappers.@init_executable_product(
        turbo_magnon,
        "bin/turbo_magnon.x",
    )

    JLLWrappers.@init_executable_product(
        turbo_spectrum,
        "bin/turbo_spectrum.x",
    )

    JLLWrappers.@init_executable_product(
        xspectra,
        "bin/xspectra.x",
    )

    JLLWrappers.@generate_init_footer()
end  # __init__()
